// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/styles/ui-variables.less
// for a full listing of what's available.

// Once Atom supports LESS 2.4 should (optionally) so this will also run in browser.
@syntax-text-color: black;
@syntax-background-color: white;
@syntax-selection-color: #a7caff;
@syntax-secondary-selection-color: #EDF4FF;
@syntax-cursor-color: #333;
@syntax-invisible-character-color: lightgray;

//@import "ui-variables";
//@import "syntax-variables";

@font-size: 16px;
@font-family: 'Open Sans', Helvetica;
@line-height: round(@font-size * 1.5);
@item-spacing: round(@font-size / 4.0);
@item-indent-spacing: round(@font-size * 1.5);

birch-outline-editor {
  color: @syntax-text-color;
  background-color: @syntax-background-color;
  font-family: @font-family;
  font-size: @font-size;
  line-height: @line-height;
  overflow-y: auto;
  overflow-x: hidden;
  user-select: none;
}

#birchTextCalculationIFrame {
  position: absolute;
  left:-9999px;
}

input[is="outline-editor-focus"] {
  position: fixed;
  width:1px;
  height:1px;
  color: transparent;
  background: none;
  border:none;
  margin:0;
  padding:0;
  pointer-events: none;
  &:focus {
    outline-color: transparent;
    outline-style: none;
  }
}

birch-outline-editor > ul {
  cursor: text;
  margin: 0 auto;
  padding: 0;
  overflow: hidden;
  min-height: 100%;
  position: relative;
}

.bhoistedItem {
  > .bbranchcontrols {
    display: none;
  }
  > .bbranchcontrols {
    display: none;
  }
  > .bbranch > .bitemcontent {
    display: none;
  }
  margin: @item-indent-spacing 0;
}

//
// Outline Structure
//

.bitem {
  display:flex;
  flex-direction: row;
}

.bbranchcontrols {
  user-select: none;
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
  flex-shrink: 0;
  flex-grow: 0;
  //margin:0.5rem 0 0 0;
  margin:0;
}

.bhandle {
  cursor: default;
  pointer-events: all;
  width: @item-indent-spacing;
  background: none;
  line-height: @line-height;
  font-size: @font-size;
  text-decoration:none;
  flex-grow: 0;
  color: @syntax-text-color;
}

.bhandle:before {
  font-size: @font-size;
  line-height: @line-height;
  font-weight: normal;
  content: '▸';
}

.bborder {
  flex-grow: 1;
}

.bexpanded > .bbranchcontrols > .bborder {
    border-left: 1px solid @syntax-invisible-character-color;
}

.bbranch {
  flex-grow: 1;
}

.bbodytext {
  margin: 0.5rem 0 0 0;
  margin: 0;
  display: inline-block;
  min-width: 1px; // So cursor will display when empty since inline-block
  user-select: text;
  line-height: @line-height;
  white-space: pre-wrap;
  &:focus {
    outline-color: transparent;
    outline-style: none;
  }
}

.bbadges {
  user-select: none;
  display: inline-block;
}

.bbadges > a {
  //margin-left: 0.5rem;
  padding: 0px 2px;
  border-radius: 2px;
  color: white;
  text-decoration:none;
}

.bbadges > .btag {
  user-select: none;
  background: #5bc0de;
}

.bbadges > .btag:before {
  content: "";
}

.bbadges > .bassign {
  background: #E0FFE0;
}

.bbadges > .bassign:before {
  content: "@";
}

.bchildren {
  list-style-type: none;
  padding-left: 0;
  margin: 0;
}

//
// Selection
//

::selection {
  // http://stackoverflow.com/questions/14970891/css-selection-color-behaving-strangely-on-chrome
  background-color: fade(@syntax-selection-color, 99%);
}

.styledTextCaret {
  pointer-events: none;
  background: @syntax-cursor-color;
}

.bitemselected {
  > .bbranchcontrols > .bhandle {
    background: @syntax-selection-color;
  }
  > .bbranch {
    > .bitemcontent {
      background-color: @syntax-selection-color;
      *::selection {
        background-color: transparent;
      }
    }
  }
}

.btextselected > .bbranch > .bitemcontent {
  background-color: transparent;
}

.bsimulatedSelectionCursor {
  background-color: @syntax-text-color;
}

.bsimulatedSelection {
  background-color: @syntax-selection-color;
}

//
// Drag and Drop
//

.bdropbefore > .bbranch > .bitemcontent,
.bdropafter > .bbranch > .bitemcontent {
  position: relative;
}

@drop-ball-radius: round(@font-size / 4);
@drop-ball-diameter: round(@drop-ball-radius * 2.0);

.bdropbefore > .bbranch > .bitemcontent::before,
.bdropafter > .bbranch > .bitemcontent::after {
  pointer-events: none;
  display:block;
  position: absolute;
  left: 0;
  right: 0;
  height: @drop-ball-diameter;
  margin: -(@drop-ball-radius) 0 0 -@drop-ball-diameter;
  content: "";
  background-image: url('data:image/svg+xml;utf8,<svg width="10000rem" height="0.5rem" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg"><g id="dropIndicator"><circle fill="none" stroke="@{syntax-cursor-color}" stroke-width="2" cx="4" cy="4" r="3.0" /><line fill="none" stroke="@{syntax-cursor-color}" stroke-width="2" x1="7" y1="4" x2="10000" y2="4" /></g></svg>');
  background-repeat: no-repeat;
}

.bdropafter > .bbranch > .bitemcontent::after {
  margin: -@drop-ball-radius 0 0 -@drop-ball-diameter;
}

/*

.bitem {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.bchildren {
  margin: 0;
  padding: 0;
}

.bcontent {
  display: flex;
  margin-right: @item-indent-spacing;
}

.bgutter {
  flex: 0 0 auto;
  display: flex;
  padding-top: @item-spacing;
  align-items: flex-start;
  justify-content: flex-end;
}

.generate-gutter-levels(@n, @i: 0) when (@i =< @n) {
  .bitem[data-level="@{i}"] {
    > .bcontent > .bgutter {
      flex-basis: (@item-indent-spacing * @i);
    }
  }
  .generate-gutter-levels(@n, (@i + 1));
}

.generate-gutter-levels(20);

.bbody {
  color: @syntax-text-color;
  flex: 1 1 auto;
  display: inline;
  user-select: text;
  line-height: @line-height;
  white-space: pre-wrap;
  padding: @item-spacing 0;
  margin: 0;
  &:focus {
    outline-color: transparent;
    outline-style: none;
  }
  a {
    color: @syntax-text-color;
    text-decoration: underline;
  }
}

//
// Handles
//

.bitemHandle, .bselectionHandle {
  pointer-events: all;
  border: 0;
  margin: 0;
  padding: 0;
  min-width: @item-indent-spacing;
  background: none;
  text-align: center;
  user-select: none;
  color: @syntax-invisible-character-color;
}

.bitemHandle:focus, .bselectionHandle:focus {
  outline-color: transparent;
  outline-style: none;
}

.bhasChildren:not(.bexpanded) > .bcontent > .bgutter > .bitemHandle {
  color: @syntax-text-color;
}

.bitemHandle::after {
  font-size: @font-size;
  line-height: @line-height;
  font-weight: normal;
  content: "▸";
}

//
// Drag and Drop
//

.bdropbefore > .bcontent > .bbody,
.bdropafter > .bcontent > .bbody {
  position: relative;
}

@drop-ball-radius: round(@font-size / 4);
@drop-ball-diameter: round(@drop-ball-radius * 2.0);

.bdropbefore > .bcontent > .bbody::before,
.bdropafter > .bcontent > .bbody::after {
  pointer-events: none;
  display:block;
  position: absolute;
  left: 0;
  right: 0;
  height: @drop-ball-diameter;
  margin: -(@item-spacing + @drop-ball-radius) 0 0 -@drop-ball-diameter;
  content: "";
  background-image: url('data:image/svg+xml;utf8,<svg width="10000rem" height="0.5rem" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg"><g id="dropIndicator"><circle fill="none" stroke="@{syntax-cursor-color}" stroke-width="2" cx="4" cy="4" r="3.0" /><line fill="none" stroke="@{syntax-cursor-color}" stroke-width="2" x1="7" y1="4" x2="10000" y2="4" /></g></svg>');
  background-repeat: no-repeat;
}

.bdropafter > .bcontent > .bbody::after {
  margin: (@item-spacing - @drop-ball-radius) 0 0 -@drop-ball-diameter;
}

//
// UI Styling, move this out of core?
//

birch-link-editor {
  .buttonRow {
    text-align: right;
  }

  button {
    min-width: 100px;
    text-align: right
  }
}

//
// Type styling, move this out of core.
//

.bitem[data-done] > .bcontent > .bbody {
  text-decoration: line-through;
}
*/
