// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/styles/ui-variables.less
// for a full listing of what's available.
@import "ui-variables";
@import "syntax-variables";
//@import "atom://static/variables/ui-variables";

@font-family: 'Open Sans', Helvetica;
@font-size: 16px;
@line-height: @font-size * 1.5;
@item-padding: @font-size / 4.0;
@gutterWidthPerLevel: @font-size * 1.5;

birch-outline-editor {
  color: @syntax-text-color;
  background-color: @syntax-background-color;
  font-family: @font-family;
  font-size: @font-size;
  line-height: @line-height;
  overflow-y: auto;
  overflow-x: hidden;
  user-select: none;
}

#birchTextCalculationIFrame {
  position: absolute;
  left:-999em;
}

input[is="outline-editor-focus"] {
  position: fixed;
  width:1px;
  height:1px;
  color: transparent;
  background: none;
  border:none;
  margin:0;
  padding:0;
  pointer-events: none;
  &:focus {
    outline-color: transparent;
    outline-style: none;
  }
}

birch-outline-editor > ul {
  cursor: text;
  margin: 0 auto;
  padding: 0;
  overflow: hidden;
  min-height: 100%;
  position: relative;
}

.bitem.bhoistedItem {
  > .bcontent {
    display: none;
  }
  margin: @gutterWidthPerLevel 0;
}

//
// Item
//

.bitem {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.bchildren {
  margin: 0;
  padding: 0;
//	padding-left: @gutterWidthPerLevel / 2.0;
//	margin-left: @gutterWidthPerLevel / 2.0;
//	border-left: 1px dashed mix(@syntax-text-color, @syntax-background-color, percentage(0.1));
}

.bcontent {
  display: flex;
  margin-right: @gutterWidthPerLevel;
}

.bgutter {
  flex: 0 0 auto;
  display: flex;
  padding-top: @item-padding;
  align-items: flex-start;
  justify-content: flex-end;
}

.generate-gutter-levels(@n, @i: 0) when (@i =< @n) {
  .bitem[data-level="@{i}"] {
    > .bcontent > .bgutter {
      flex-basis: (@gutterWidthPerLevel * @i);
    }
  }
  .generate-gutter-levels(@n, (@i + 1));
}

.generate-gutter-levels(20);

.bbody {
  color: @syntax-text-color;
  flex: 1 1 auto;
  display: inline;
  user-select: text;
  line-height: @line-height;
  white-space: pre-wrap;
  padding: @item-padding 0;
  margin: 0;
  &:focus {
    outline-color: transparent;
    outline-style: none;
  }
  a {
    color: @syntax-text-color;
    text-decoration: underline;
  }
}

//
// Selection
//

::selection {
  // fade is to work around
  // http://stackoverflow.com/questions/14970891/css-selection-color-behaving-strangely-on-chrome
  background-color: fade(@syntax-selection-color, 99%);
}

.styledTextCaret {
  pointer-events: none;
  background: @syntax-cursor-color;
}

.bselectedItem > .bcontent > .bbody {
  background-color: @syntax-selection-color;
}

.bselectedItem:not(.bselectedItemWithTextSelection) > .bcontent *::selection {
  background-color: transparent;
}

.bselectedItemWithTextSelection > .bcontent > .bbody {
  background-color: transparent;
}

.bsimulatedSelectionCursor {
  background-color: @syntax-text-color;
}

.bsimulatedSelection {
  background-color: @syntax-selection-color;
}

//
// Handles
//

.bitemHandle, .bselectionHandle {
  pointer-events: all;
  border: 0;
  margin: 0;
  padding: 0;
  min-width: @gutterWidthPerLevel;
  background: none;
  text-align: center;
  user-select: none;
  color: @syntax-invisible-character-color;
}

.bitemHandle:focus, .bselectionHandle:focus {
  outline-color: transparent;
  outline-style: none;
}

.bhasChildren:not(.bexpandedItem) > .bcontent > .bgutter > .bitemHandle {
  color: @syntax-text-color;
}

.bitemHandle::after {
  font-size: @font-size;
  line-height: @line-height;
  font-weight: normal;
  content: "â–¸";
}

//
// Drag and Drop
//

.bdropInsertBeforeItem > .bcontent > .bbody,
.bdropInsertAfterItem > .bcontent > .bbody {
  position: relative;
}

@drop-ball-radius: @font-size / 4;
@drop-ball-diameter: @drop-ball-radius * 2.0;

.bdropInsertBeforeItem > .bcontent > .bbody::before,
.bdropInsertAfterItem > .bcontent > .bbody::after {
  pointer-events: none;
  display:block;
  position: absolute;
  left: 0;
  right: 0;
  height: @drop-ball-diameter;
  margin: -(@item-padding + @drop-ball-radius) 0 0 -@drop-ball-diameter;
  content: "";
  background-image: url('data:image/svg+xml;utf8,<svg width="10000rem" height="0.5rem" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg"><g id="dropIndicator"><circle fill="none" stroke="@{syntax-cursor-color}" stroke-width="2" cx="4" cy="4" r="3.0" /><line fill="none" stroke="@{syntax-cursor-color}" stroke-width="2" x1="7" y1="4" x2="10000" y2="4" /></g></svg>');
  background-repeat: no-repeat;
}

.bdropInsertAfterItem > .bcontent > .bbody::after {
  margin: (@item-padding - @drop-ball-radius) 0 0 -@drop-ball-diameter;
}

//
// UI Styling, move this out of core?
//

birch-link-editor {
  .buttonRow {
    text-align: right;
  }

  button {
    min-width: 100px;
    text-align: right
  }
}

//
// Type styling, move this out of core.
//

.bitem[data-done] > .bcontent > .bbody {
  text-decoration: line-through;
}

